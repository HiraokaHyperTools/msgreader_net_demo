@page "/"

<PageTitle>msgreader_net_demo</PageTitle>

<h1>msgreader_net_demo</h1>

<p><i>Notes</i>:</p>
<ul>
    <li>The embedded library <a href="https://github.com/Sicos1977/MSGReader" target="_blank">MSGReader</a>'s owner is Sicos1977 (Kees van Spelde)</li>
</ul>

<div class="mb-3 mt-3">
    <label for="@(_idPrefix + "file")" class="form-label">Input msg file:</label>
    <InputFile OnChange="@LoadMsgFile" class="form-control" id="@(_idPrefix + "file")" />
</div>

@if (_error.Length != 0)
{
    <div class="alert alert-warning">
        <strong>There is an loading error!</strong> <pre>@_error</pre>
    </div>
}

@if (_ready)
{
    if (_bodyHtml.Length != 0)
    {
        <div class="mb-3 mt-3">
            <label for="@(_idPrefix + "html")">BodyHtml:</label>
            <textarea class="form-control" rows="5" value="@_bodyHtml" id="@(_idPrefix + "html")"></textarea>
        </div>
    }
    if (_bodyRtf.Length != 0)
    {
        <div class="mb-3 mt-3">
            <label for="@(_idPrefix + "rtf")">BodyRtf:</label>
            <textarea class="form-control" rows="5" value="@_bodyRtf" id="@(_idPrefix + "rtf")"></textarea>
        </div>
    }
    if (_bodyText.Length != 0)
    {
        <div class="mb-3 mt-3">
            <label for="@(_idPrefix + "text")">BodyText:</label>
            <textarea class="form-control" rows="5" value="@_bodyText" id="@(_idPrefix + "text")"></textarea>
        </div>
    }

}

@code {
    private bool _ready = false;
    private string _bodyHtml = "";
    private string _bodyRtf = "";
    private string _bodyText = "";
    private string _error = "";
    private string _idPrefix = Guid.NewGuid().ToString("N") + "_";

    private async void LoadMsgFile(InputFileChangeEventArgs e)
    {
        _error = "";
        _ready = false;
        try
        {
            if (e.File != null)
            {
                using var stream = e.File.OpenReadStream(maxAllowedSize: 5 * 1024 * 1024);
                using var temp = new MemoryStream();
                await stream.CopyToAsync(temp);
                using var msg = new MsgReader.Outlook.Storage.Message(temp);
                _bodyHtml = msg.BodyHtml ?? "";
                _bodyRtf = msg.BodyRtf ?? "";
                _bodyText = msg.BodyText ?? "";
                _ready = true;
            }
        }
        catch (Exception ex)
        {
            _error = ex + "";
        }

        StateHasChanged();
    }
}